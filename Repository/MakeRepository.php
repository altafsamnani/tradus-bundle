<?php

namespace TradusBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NonUniqueResultException;
use TradusBundle\Entity\Make;

/**
 * MakeRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MakeRepository extends EntityRepository
{
    /**
     * @param string $slug
     * @return mixed
     * @throws NonUniqueResultException
     */
    public function getMakeBySlug(String $slug)
    {
        $query = $this->createQueryBuilder('makes')
            ->select('makes')
            ->andWhere('makes.slug = :slug')
            ->andWhere('makes.status = :status')
            ->setParameter('slug', $slug)
            ->setParameter('status', Make::STATUS_ONLINE);

        return $query->getQuery()->getOneOrNullResult();
    }

    /**
     * @param array $slugs
     * @return mixed
     */
    public function getMakesBySlug(array $slugs)
    {
        $query = $this->createQueryBuilder('makes')
            ->select('makes')
            ->andWhere('makes.slug IN (:slugs)')
            ->andWhere('makes.status = :status')
            ->setParameter('slugs', $slugs)
            ->setParameter('status', Make::STATUS_ONLINE);

        return $query->getQuery()->getResult();
    }

    /**
     * @param int $id
     * @return Make | null
     * @throws NonUniqueResultException
     */
    public function getMakeById(int $id)
    {
        $query = $this->createQueryBuilder('makes')
            ->select('makes')
            ->andWhere('makes.id = :id')
            ->andWhere('makes.status = :status')
            ->setParameter('id', $id)
            ->setParameter('status', Make::STATUS_ONLINE);

        return $query->getQuery()->getOneOrNullResult();
    }

    /**
     * @param array $ids
     * @return mixed
     */
    public function getMakesByIds(array $ids)
    {
        $query = $this->createQueryBuilder('makes')
            ->select('makes.slug, makes.name')
            ->andWhere('makes.id IN (:ids)')
            ->andWhere('makes.status = :status')
            ->setParameter('ids', $ids)
            ->setParameter('status', Make::STATUS_ONLINE);

        return $query->getQuery()->getResult();
    }
}
