#!/usr/bin/env bash

phpcs="$HOME/AppData/Roaming/Composer/vendor/bin/phpcs"
if ! [ -f $phpcs ];
then
    phpcs="$HOME/.composer/vendor/bin/phpcs"
fi

phpcbf="$HOME/AppData/Roaming/Composer/vendor/bin/phpcbf"
if ! [ -f $phpcbf ];
then
    phpcbf="$HOME/.composer/vendor/bin/phpcbf"
fi

function coloredEcho(){
    local exp=$1;
    local color=$2;
    if ! [[ $color =~ '^[0-9]$' ]] ; then
       case $(echo $color | tr '[:upper:]' '[:lower:]') in
        black) color=0 ;;
        red) color=1 ;;
        green) color=2 ;;
        yellow) color=3 ;;
        blue) color=4 ;;
        magenta) color=5 ;;
        cyan) color=6 ;;
        white|*) color=7 ;; # white or invalid color
       esac
    fi
    tput setaf $color;
    echo $exp;
    tput sgr0;
}

read -r -d '' gandalf << "EOM"
------------------------------------------
                           ,---.
                          /    |
                         /     |
YOU SHALL NOT PASS!     /      |
                       /       |
                  ___,'        |
                <  -'          :
                 `-.__..--'``-,_\_
                    |o/ <o>` :,.)_`>
                    :/ `     ||/)
                    (_.).__,-` |\
                    /( `.``   `| :
                    \'`-.)  `  ; ;
                    | `       /-<
                    |     `  /   `.
    ,-_-..____     /|  `    :__..-'\
   /,'-.__\\  ``-./ :`      ;       \
   `\ `\  `\\  \ :  (   `  /  ,   `. \
     \` \   \\   |  | `   :  :     .\ \
      \ `\_  ))  :  ;     |  |      ): :
     (`-.-'\ ||  |\ \   ` ;  ;       | |
      \-_   `;;._   ( `  /  /_       | |
       `-.-.// ,'`-._\__/_,'         ; |
          \:: :     /     `     ,   /  |
           || |    (        ,' /   /   |
           ||                ,'   /    |
------------------------------------------
EOM

# Based on code from http://tech.zumba.com/2014/04/14/control-code-quality/
PROJECT=`pwd`
STAGED_FILES_CMD=$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep \\.php)

# Determine if a file list is passed
if [ "$#" -eq 1 ]
then
    oIFS=$IFS
    IFS='
    '
    SFILES="$1"
    IFS=$oIFS
fi
SFILES=${SFILES:-$STAGED_FILES_CMD}

for FILE in $SFILES
do
    FILES="$FILES $PROJECT/$FILE"
done

if [ "$FILES" != "" ]
then
    echo "Running Code Sniffer..."

    TMP_DIR=/tmp/magic_here
    mkdir -p $TMP_DIR
    for FILE in $SFILES
    do
        mkdir -p $TMP_DIR/$(dirname $FILE)
        git show :$FILE > $TMP_DIR/$FILE
    done
    $phpcs --standard=contrib/ruleset.xml --encoding=utf-8 -n -p $TMP_DIR
    PHPCS_ERROR=$?
    rm -rf $TMP_DIR
    if [ $PHPCS_ERROR != 0 ]
    then
        if [ "$TERM" != "dumb" ]; then
            coloredEcho "CODING STANDARDS ERRORS HAVE BEEN DETECTED. RUNNING FIXER..." magenta
        else
            echo "CODING STANDARDS ERRORS HAVE BEEN DETECTED. RUNNING FIXER..."
        fi
        $phpcbf --standard=contrib/ruleset.xml --encoding=utf-8 -n -p $FILES
        #git add $FILES
        if [ "$TERM" != "dumb" ]; then
            coloredEcho "RUNNING CODE SNIFFER AGAIN: " cyan
        else
            echo "RUNNING CODE SNIFFER AGAIN: "
        fi
        $phpcs --standard=contrib/ruleset.xml --encoding=utf-8 -n -p $FILES
        if [ $? != 0 ]
        then
            if [ "$TERM" != "dumb" ]; then
                tput setaf 2;
                    echo -e "${gandalf}\n"
                tput sgr0;
                coloredEcho "ERRORS FOUND THAT ARE NOT AUTOMATICALLY FIXABLE. PLEASE FIX THE ERRORS BEFORE COMMIT." red
            else
                echo -e "${gandalf}\n"
                echo "ERRORS FOUND THAT ARE NOT AUTOMATICALLY FIXABLE. PLEASE FIX THE ERRORS BEFORE COMMIT."
            fi
            echo -e "\n"
            exit 1
        fi
    fi
fi

exit $?
